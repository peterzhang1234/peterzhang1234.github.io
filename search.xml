<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新型冠状病毒肺炎疫情图</title>
      <link href="2021/04/12/Cov_19/"/>
      <url>2021/04/12/Cov_19/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe src="https://www.lovestu.com/api/project/cnmapyinqing/obj.php" height="500" frameborder="no" border="0" width="100%"> </iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>今日必应壁纸</title>
      <link href="2020/12/30/bing_picture/"/>
      <url>2020/12/30/bing_picture/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://api.sunweihu.com/api/bing1/api.php"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell 命令(一)</title>
      <link href="2020/03/01/linux_command-1/"/>
      <url>2020/03/01/linux_command-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="本篇文章主要介绍一些基础的Linux系统-类unix系统-终端命令的使用"><a href="#本篇文章主要介绍一些基础的Linux系统-类unix系统-终端命令的使用" class="headerlink" title="本篇文章主要介绍一些基础的Linux系统(类unix系统)终端命令的使用"></a>本篇文章主要介绍一些基础的Linux系统(类unix系统)终端命令的使用</h3><p><img src="https://s2.ax1x.com/2020/03/01/3c3K0I.jpg" alt="linux_command"></p><a id="more"></a><h3 id="emsp-有关Linux的问题可以看这篇文章-本篇文章主要介绍一些比较简单常用的命令，方便入门使用Linux，体验终端的魅力。一般情况下终端快捷键为ctrl-alt-t"><a href="#emsp-有关Linux的问题可以看这篇文章-本篇文章主要介绍一些比较简单常用的命令，方便入门使用Linux，体验终端的魅力。一般情况下终端快捷键为ctrl-alt-t" class="headerlink" title="&emsp;有关Linux的问题可以看这篇文章,本篇文章主要介绍一些比较简单常用的命令，方便入门使用Linux，体验终端的魅力。一般情况下终端快捷键为ctrl+alt+t"></a>&emsp;有关Linux的问题可以看<a href="https://peterzhang.tk/2019/10/28/what's_linux/">这篇文章</a>,本篇文章主要介绍一些比较简单常用的命令，方便入门使用Linux，体验终端的魅力。一般情况下终端快捷键为ctrl+alt+t</h3><h3 id="emsp-Linux系统目录结构"><a href="#emsp-Linux系统目录结构" class="headerlink" title="&emsp;Linux系统目录结构"></a>&emsp;Linux系统目录结构</h3><p> <img src="https://www.runoob.com/wp-content/uploads/2014/06/003vPl7Rty6E8kZRlAEdc690.jpg"></p><h3 id="emsp-命令行使用"><a href="#emsp-命令行使用" class="headerlink" title="&emsp;命令行使用"></a>&emsp;命令行使用</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[命令] (选项) (参数)</span><br></pre></td></tr></table></figure><blockquote><h3 id="man-——-查看帮助手册"><a href="#man-——-查看帮助手册" class="headerlink" title="man —— 查看帮助手册"></a>man —— 查看帮助手册</h3></blockquote><ul><li>这个命令主要查看某个命令如何使用，比如 man man，这个命令就是查看 man 命令的使用，当我们输入终端时就会看到输出使用方法和一些参数使用。<br><img src="https://s2.ax1x.com/2020/03/01/3cUodJ.png" alt="man"> </li><li>这时候就可以通过上下方向键或者鼠标滚轮进行翻页，按q即可退出。</li></ul><blockquote><h3 id="cd-——-切换目录"><a href="#cd-——-切换目录" class="headerlink" title="cd —— 切换目录"></a>cd —— 切换目录</h3><h3 id="pwd-——-打印当前目录"><a href="#pwd-——-打印当前目录" class="headerlink" title="pwd —— 打印当前目录"></a>pwd —— 打印当前目录</h3><h3 id="ls-——-列出目录内容"><a href="#ls-——-列出目录内容" class="headerlink" title="ls —— 列出目录内容"></a>ls —— 列出目录内容</h3></blockquote><ul><li><p>一般当我们打开终端是，默认目录就是当前用户家目录 ～ 或 /home/xxx/ ，如果是以root账户登录,则是 /root/ 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..           <span class="comment"># 进入上一层文件夹,&#x27;.&#x27; 代表当前目录，&#x27;..&#x27; 代表上一层目录(父目录)。</span></span><br></pre></td></tr></table></figure></li><li><p>下图是在终端执行上述命令的演示,还有一些参数的使用可以通过 man 命令查看。<br><img src="https://s2.ax1x.com/2020/03/01/3cWqfK.gif"></p></li></ul><blockquote><h3 id="cat-连接多个文件并打印到标准输出"><a href="#cat-连接多个文件并打印到标准输出" class="headerlink" title="cat 连接多个文件并打印到标准输出"></a>cat 连接多个文件并打印到标准输出</h3></blockquote><ul><li>显示文件内容，常用作预览文件内容。<br><img src="https://s2.ax1x.com/2020/03/01/3gCQ4x.gif"></li></ul><blockquote><h3 id="cp-——-复制文件-夹"><a href="#cp-——-复制文件-夹" class="headerlink" title="cp —— 复制文件(夹)"></a>cp —— 复制文件(夹)</h3><h3 id="mv-——-移动文件、文件夹、重命名文件-夹"><a href="#mv-——-移动文件、文件夹、重命名文件-夹" class="headerlink" title="mv —— 移动文件、文件夹、重命名文件(夹)"></a>mv —— 移动文件、文件夹、重命名文件(夹)</h3><h3 id="rm-——-删除文件-夹"><a href="#rm-——-删除文件-夹" class="headerlink" title="rm —— 删除文件(夹)"></a>rm —— 删除文件(夹)</h3><h3 id="mkdir-——-新建文件夹"><a href="#mkdir-——-新建文件夹" class="headerlink" title="mkdir —— 新建文件夹"></a>mkdir —— 新建文件夹</h3><h3 id="touch-——-新建文件"><a href="#touch-——-新建文件" class="headerlink" title="touch —— 新建文件"></a>touch —— 新建文件</h3></blockquote><ul><li><p>命令使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp/mv [文件] [目标文件夹]</span><br><span class="line">cp/mv -r [文件夹] [目标文件夹]</span><br><span class="line">rm [文件] </span><br><span class="line">rm [-r] [文件夹]</span><br><span class="line">mkdir [文件夹]</span><br><span class="line">touch [文件]</span><br></pre></td></tr></table></figure></li><li><p>如果需复制文件夹则需要添加 -r 进行递归操作。</p></li><li><p>注：我们常常在网上会看到一些大神会给出  rm -rf /* 这一条”神奇“的命令，这是一条删库的命令，非常危险。不过，对于一些企业的服务器，大多会对这些危险的命令会做出限制。以下是对该命令的解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm                 <span class="comment"># 删除命令</span></span><br><span class="line">-r                 <span class="comment"># 递归</span></span><br><span class="line">-f                 <span class="comment"># 强制执行、省去二次确认</span></span><br><span class="line">/*                 <span class="comment"># 根目录下所有文件</span></span><br></pre></td></tr></table></figure><blockquote><h3 id="tar-——-打包、压缩"><a href="#tar-——-打包、压缩" class="headerlink" title="tar —— 打包、压缩"></a>tar —— 打包、压缩</h3></blockquote></li><li><p>tar命令 可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。</p></li><li><p>zip格式<br>压缩： zip -r [目标文件名].zip [原文件/目录名]<br>解压： unzip [原文件名].zip<br>注：-r参数代表递归</p></li><li><p>tar格式（该格式仅仅打包，不压缩）<br>打包：tar -cvf [目标文件名].tar [原文件名/目录名]<br>解包：tar -xvf [原文件名].tar<br>注：c参数代表create（创建），x参数代表extract（解包），v参数代表verbose（详细信息），f参数代表filename（文件名），所以f后必须接文件名。</p></li><li><p>tar.gz格式</p><ul><li><p>方式一：利用前面已经打包好的tar文件，直接用压缩命令。</p><p>压缩：gzip [原文件名].tar<br>解压：gunzip [原文件名].tar.gz</p></li><li><p>方式二：一次性打包并压缩、解压并解包</p><p>打包并压缩： tar -zcvf [目标文件名].tar.gz [原文件名/目录名]<br>解压并解包： tar -zxvf [原文件名].tar.gz<br>注：z代表用gzip算法来压缩/解压。</p></li></ul></li><li><p>tar.bz2格式</p><ul><li><p>方式一：利用已经打包好的tar文件，直接执行压缩命令：</p><p>压缩：bzip2 [原文件名].tar<br>解压：bunzip2 [原文件名].tar.bz2</p></li><li><p>方式二：一次性打包并压缩、解压并解包</p><p>打包并压缩： tar -jcvf [目标文件名].tar.bz2 [原文件名/目录名]<br>解压并解包： tar -jxvf [原文件名].tar.bz2<br>注：小写j代表用bzip2算法来压缩/解压。</p></li></ul></li><li><p>tar.xz格式</p><ul><li><p>方式一：利用已经打包好的tar文件，直接用压缩命令：</p><p>压缩：xz [原文件名].tar<br>解压：unxz [原文件名].tar.xz</p></li><li><p>方式二：一次性打包并压缩、解压并解包</p><p>打包并压缩： tar -Jcvf [目标文件名].tar.xz [原文件名/目录名]<br>解压并解包： tar -Jxvf [原文件名].tar.xz<br>注：大写J代表用xz算法来压缩/解压。</p></li></ul></li></ul><blockquote><h3 id="clear-——-清屏"><a href="#clear-——-清屏" class="headerlink" title="clear —— 清屏"></a>clear —— 清屏</h3></blockquote><ul><li>清除当前屏幕终端上所有信息<br><img src="https://s2.ax1x.com/2020/03/01/3gui5D.gif"></li></ul><blockquote><h3 id="cal-——-显示当前日历或指定日期的日历"><a href="#cal-——-显示当前日历或指定日期的日历" class="headerlink" title="cal —— 显示当前日历或指定日期的日历"></a>cal —— 显示当前日历或指定日期的日历</h3></blockquote><ul><li><p>通过终端就可以查看日期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal [-mj] [月] [年]</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/03/01/3gMBv9.gif"></p></li></ul><blockquote><h3 id="uname-——-显示Linux系统信息"><a href="#uname-——-显示Linux系统信息" class="headerlink" title="uname —— 显示Linux系统信息"></a>uname —— 显示Linux系统信息</h3></blockquote><ul><li><p>uname命令 用于打印当前系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）。</p><p><img src="https://s2.ax1x.com/2020/03/01/3glJYT.gif"></p></li></ul><blockquote><h3 id="top-——-显示或管理执行中的程序"><a href="#top-——-显示或管理执行中的程序" class="headerlink" title="top —— 显示或管理执行中的程序"></a>top —— 显示或管理执行中的程序</h3><h3 id="kill-——-删除执行中的进程或工作"><a href="#kill-——-删除执行中的进程或工作" class="headerlink" title="kill —— 删除执行中的进程或工作"></a>kill —— 删除执行中的进程或工作</h3><h3 id="killall-——-使用进程的名称来杀死一组进程"><a href="#killall-——-使用进程的名称来杀死一组进程" class="headerlink" title="killall ——  使用进程的名称来杀死一组进程"></a>killall ——  使用进程的名称来杀死一组进程</h3><h3 id="ps-——-报告当前系统的进程状态"><a href="#ps-——-报告当前系统的进程状态" class="headerlink" title="ps —— 报告当前系统的进程状态"></a>ps —— 报告当前系统的进程状态</h3><h3 id="free-——-显示内存的使用情况"><a href="#free-——-显示内存的使用情况" class="headerlink" title="free —— 显示内存的使用情况"></a>free —— 显示内存的使用情况</h3></blockquote><ul><li>top可以实时动态地查看系统的整体运行情况，是一个综合了多方信息监测系统性能和运行信息的实用工具。通过top命令所提供的互动式界面，用热键可以管理。按键q可退出。<br><img src="https://s2.ax1x.com/2020/03/01/3g8Fm9.gif"></li><li>如果觉得 top 太过单调，也可以使用 htop ，不过需要自己安装。</li><li>一般 kill/killall 后接需要结束的进程(组)的名称或PID。</li></ul><blockquote><h3 id="tree-——-树状图列出目录的内容"><a href="#tree-——-树状图列出目录的内容" class="headerlink" title="tree —— 树状图列出目录的内容"></a>tree —— 树状图列出目录的内容</h3></blockquote><ul><li>以树状图列出目录的内容,方便管理。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree [-L] level      # 限制目录显示层级</span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2020/03/01/3gGgUI.gif"></li></ul><blockquote><h3 id="ifconfig-——-配置和显示Linux系统网卡的网络参数"><a href="#ifconfig-——-配置和显示Linux系统网卡的网络参数" class="headerlink" title="ifconfig —— 配置和显示Linux系统网卡的网络参数"></a>ifconfig —— 配置和显示Linux系统网卡的网络参数</h3></blockquote><ul><li>ifconfig命令 被用于配置和显示Linux内核中网络接口的网络参数。用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。对于 有些发行版，并未预装，这就需要手动安装 net-tools，也可以使用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2020/03/01/3gDln0.gif"></li></ul><blockquote><h3 id="grep-——-强大的文本搜索工具"><a href="#grep-——-强大的文本搜索工具" class="headerlink" title="grep —— 强大的文本搜索工具"></a>grep —— 强大的文本搜索工具</h3></blockquote><ul><li>grep （global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。<br><img src="https://s2.ax1x.com/2020/03/01/3gcMwt.gif"></li></ul><blockquote><h3 id="tee-——-从标准输入读取数据并重定向到标准输出和文件。"><a href="#tee-——-从标准输入读取数据并重定向到标准输出和文件。" class="headerlink" title="tee —— 从标准输入读取数据并重定向到标准输出和文件。"></a>tee —— 从标准输入读取数据并重定向到标准输出和文件。</h3></blockquote><ul><li>需要同时查看数据内容并输出到文件时使用。<br><img src="http://yanxuan.nosdn.127.net/9952b2e20fbb9735b7cd7799d4925887.gif"></li></ul><blockquote><h3 id="who-——-显示目前登录系统的用户信息"><a href="#who-——-显示目前登录系统的用户信息" class="headerlink" title="who —— 显示目前登录系统的用户信息"></a>who —— 显示目前登录系统的用户信息</h3><h3 id="whoami-——-打印当前有效的用户名称"><a href="#whoami-——-打印当前有效的用户名称" class="headerlink" title="whoami —— 打印当前有效的用户名称"></a>whoami —— 打印当前有效的用户名称</h3><h3 id="which-——-查找并显示给定命令的绝对路径"><a href="#which-——-查找并显示给定命令的绝对路径" class="headerlink" title="which —— 查找并显示给定命令的绝对路径"></a>which —— 查找并显示给定命令的绝对路径</h3><h3 id="sudo-——-以其他身份来执行命令"><a href="#sudo-——-以其他身份来执行命令" class="headerlink" title="sudo —— 以其他身份来执行命令"></a>sudo —— 以其他身份来执行命令</h3></blockquote><ul><li>sudo命令 用来以其他身份来执行命令，预设的身份为root。在/etc/sudoers中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -i </span><br><span class="line">sudo -s</span><br><span class="line">sudo su                    <span class="comment"># 获取root权限             </span></span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2020/03/01/3gIel6.gif"> </li><li>root用户有最高权限，可以任意修改系统文件，随意修改系统文件有可能造成不可逆的破坏，操作需谨慎。</li></ul><blockquote><h3 id="chown-——-用来变更文件或目录的拥有者或所属群组"><a href="#chown-——-用来变更文件或目录的拥有者或所属群组" class="headerlink" title="chown —— 用来变更文件或目录的拥有者或所属群组"></a>chown —— 用来变更文件或目录的拥有者或所属群组</h3></blockquote><ul><li><p>chown命令 改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。用户可以是用户或者是用户D，用户组可以是组名或组id。文件名可以使由空格分开的文件列表，在文件名中可以包含通配符。只有文件主和超级用户才可以便用该命。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R [文件夹]</span><br></pre></td></tr></table></figure><blockquote><h3 id="chmod-——-用来变更文件或目录的权限"><a href="#chmod-——-用来变更文件或目录的权限" class="headerlink" title="chmod —— 用来变更文件或目录的权限"></a>chmod —— 用来变更文件或目录的权限</h3></blockquote></li><li><p>演示如下，如果修改文件夹内所有文件的权限，则需要加 -R 递归参数</p><p><img src="https://s2.ax1x.com/2020/03/01/3goR2t.gif"></p></li></ul><h3 id="emsp-以上所列出的命令都是非常基础、非常常用的，而且都具有非常强大的功能，这些就需要自己慢慢摸索。"><a href="#emsp-以上所列出的命令都是非常基础、非常常用的，而且都具有非常强大的功能，这些就需要自己慢慢摸索。" class="headerlink" title="&emsp;以上所列出的命令都是非常基础、非常常用的，而且都具有非常强大的功能，这些就需要自己慢慢摸索。"></a>&emsp;以上所列出的命令都是非常基础、非常常用的，而且都具有非常强大的功能，这些就需要自己慢慢摸索。</h3><h3 id="emsp-补充：“Ctrl-C”-取消执行，“Ctrl-X”-停止执行当前命令，“Tab”-自动补全。"><a href="#emsp-补充：“Ctrl-C”-取消执行，“Ctrl-X”-停止执行当前命令，“Tab”-自动补全。" class="headerlink" title="&emsp;补充：“Ctrl + C” 取消执行，“Ctrl + X” 停止执行当前命令，“Tab” 自动补全。"></a>&emsp;补充：“Ctrl + C” 取消执行，“Ctrl + X” 停止执行当前命令，“Tab” 自动补全。</h3><h6 id="文章结束-感谢阅读"><a href="#文章结束-感谢阅读" class="headerlink" title="文章结束,感谢阅读"></a>文章结束,感谢阅读<img src="https://i.loli.net/2019/08/20/hNPquakn3wQmfDj.jpg" alt="爱你"></h6>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="2019/10/28/what&#39;s_linux/"/>
      <url>2019/10/28/what&#39;s_linux/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Linux-28周年"><a href="#Linux-28周年" class="headerlink" title="Linux 28周年"></a>Linux 28周年</h1><p><img src="https://s2.ax1x.com/2019/10/21/KQduTg.png" alt="Tux"></p><a id="more"></a><p>&emsp;Linux（/ˈlɪnəks/ LIN-əks）是一种自由和开放源码的类UNIX 操作系统。该操作系统的内核由<a href="https://baike.baidu.com/item/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%9C%AC%E7%BA%B3%E7%AC%AC%E5%85%8B%E7%89%B9%C2%B7%E6%89%98%E7%93%A6%E5%85%B9/1034429?fromtitle=%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%89%98%E7%93%A6%E5%85%B9&fromid=2122821&fr=aladdin">林纳斯·托瓦兹</a>在1991年10月5日首次发布，在加上用户空间的应用程序之后，成为 Linux 操作系统。</p><p><img src="https://s2.ax1x.com/2019/11/01/KH71je.jpg" alt="林纳斯·托瓦兹"></p><p>&emsp;Linux 也是自由软件和开放源代码软件发展中最著名的例子。只要遵循 GNU 通用公共许可证（GPL），任何个人和机构都可以自由地使用 Linux 的所有底层源代码，也可以自由地修改和再发布。大多数 Linux 系统还包括像提供 GUI 的 X Window 之类的程序。除了一部分专家之外，大多数人都是直接使用 Linux 发行版，而不是自己选择每一样组件或自行设置。</p><p>&emsp;Linux严格来说是单指操作系统的内核，因操作系统中包含了许多用户图形接口和其他实用工具。如今Linux常用来指基于Linux的完整操作系统，内核则改以Linux内核称之。由于这些支持用户空间的系统工具和库主要由理查德·斯托曼于1983年发起的GNU计划提供，自由软件基金会提议将其组合系统命名为GNU/Linux，但Linux不属于GNU计划，这个名称并没有得到社群的一致认同。</p><p>&emsp;Linux最初是作为支持英特尔x86架构的个人电脑的一个自由操作系统。当前Linux已经被移植到更多的计算机硬件平台，远远超出其他任何操作系统。Linux可以运行在服务器和其他大型平台之上，如大型计算机和超级计算机。世界上500个最快的超级计算机90％以上运行Linux发行版或变种，包括最快的前10名超级电脑运行的都是基于Linux内核的操作系统。Linux也广泛应用在嵌入式系统上，如手机（Mobile Phone）、平板电脑（Tablet）、路由器（Router）、电视（TV）和电子游戏机等。在移动设备上广泛使用的Android操作系统就是创建在Linux内核之上。</p><p><img src="https://s2.ax1x.com/2019/10/21/KQDWrt.png" alt="android"></p><p>&emsp;通常情况下，Linux被打包成供个人计算机和服务器使用的Linux发行版，一些流行的主流Linux发布版，包括Debian（及其派生版本Ubuntu、Linux Mint）、Fedora（及其相关版本Red Hat Enterprise Linux、CentOS）和openSUSE等。Linux发行版包含Linux内核和支撑内核的实用程序和库，通常还带有大量可以满足各类需求的应用程序。个人计算机使用的Linux发行版通常包含X Window和一个相应的桌面环境，如GNOME或KDE。桌面Linux操作系统常用的应用程序，包括Firefox网页浏览器、LibreOffice办公软件、GIMP图像处理工具等。由于Linux是自由软件，任何人都可以创建一个符合自己需求的Linux发行版。</p><h4 id="主流GUN-Linux发行版"><a href="#主流GUN-Linux发行版" class="headerlink" title="主流GUN/Linux发行版"></a>主流GUN/Linux发行版</h4><ul><li><a href="https://www.debian.org/index.zh-cn.html">Debian</a></li><li><a href="https://cn.ubuntu.com/">Ubuntu</a></li><li><a href="https://www.redhat.com/en/global/china">RedHat</a></li><li><a href="https://www.centos.org/download/">CentOS</a></li><li><a href="https://www.deepin.org/">Deepin</a></li><li><a href="https://software.opensuse.org/">openSUSE</a></li><li><a href="https://www.archlinux.org/">ArchLinux</a></li><li><a href="https://manjaro.org/">Manjaro</a></li><li><a href="https://www.raspberrypi.org/downloads/raspbian/">Raspberry(树莓派专用)</a></li><li><a href="https://www.gentoo.org/">GeenToo</a></li><li><a href="https://getfedora.org/zh_CN/">Fedora</a></li></ul><h5 id="文章结束，感谢阅读！"><a href="#文章结束，感谢阅读！" class="headerlink" title="文章结束，感谢阅读！ "></a>文章结束，感谢阅读！ <img src="https://s2.ax1x.com/2019/09/11/ndFEZt.gif"></h5>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="2019/07/30/test/"/>
      <url>2019/07/30/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="这是一篇测试文章"><a href="#这是一篇测试文章" class="headerlink" title="这是一篇测试文章"></a>这是一篇测试文章</h2><h2 id="This-is-an-article-for-testing"><a href="#This-is-an-article-for-testing" class="headerlink" title="This is an article for testing."></a>This is an article for testing.</h2><p><img src="https://s2.ax1x.com/2020/02/22/3QRDKK.png"></p><a id="more"></a><hr><h3 id="格式测试"><a href="#格式测试" class="headerlink" title="格式测试"></a>格式测试</h3><p>测试</p><p>  <em>测试</em></p><p>  <strong>测试</strong></p><p> <strong><em>测试</em></strong></p><ul><li>测试<ul><li>测试<ul><li>测试</li></ul></li></ul></li></ul><h3 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h3><p><img src="https://s2.ax1x.com/2019/07/30/eJbS2t.jpg"></p><hr><h3 id="音乐测试"><a href="#音乐测试" class="headerlink" title="音乐测试"></a>音乐测试</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=477839635&auto=0&height=66"></iframe><hr><h3 id="视频测试"><a href="#视频测试" class="headerlink" title="视频测试"></a>视频测试</h3><h5 id="只适配了桌面端，还没有方法同时适配桌面端和手机端，如有会的大佬望告知"><a href="#只适配了桌面端，还没有方法同时适配桌面端和手机端，如有会的大佬望告知" class="headerlink" title="(只适配了桌面端，还没有方法同时适配桌面端和手机端，如有会的大佬望告知)"></a>(只适配了桌面端，还没有方法同时适配桌面端和手机端，如有会的大佬望告知)</h5><p><iframe width="800" height="600" src="//player.bilibili.com/player.html?aid=59860590&amp;cid=104264193&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen"> </iframe></p><hr><h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><ul><li>bash<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt upgrade</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -Syyu</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rm -rf /*</span></span><br></pre></td></tr></table></figure></li><li>c语言<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg51.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P1 = <span class="number">0xfe</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>python<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dx = <span class="number">1</span></span><br><span class="line">dy = <span class="number">1</span></span><br><span class="line">x= <span class="number">163</span></span><br><span class="line">y = <span class="number">120</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">white = (<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)</span><br><span class="line">screen = pygame.display.set_mode(size)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT: sys.exit()</span><br><span class="line">    x += dx</span><br><span class="line">    y += dy</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">or</span> x &gt; width:   </span><br><span class="line">        dx = -dx</span><br><span class="line">    <span class="keyword">if</span> y &lt; <span class="number">0</span> <span class="keyword">or</span> y &gt; height:</span><br><span class="line">        dy = -dy</span><br><span class="line">    screen.fill(white)</span><br><span class="line">    pygame.draw.circle(screen, black, (x,y), <span class="number">8</span>)</span><br><span class="line">    pygame.display.flip()</span><br></pre></td></tr></table></figure></li><li>c#<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="测试结束"><a href="#测试结束" class="headerlink" title="测试结束"></a>测试结束</h3><h6 id="文章结束-感谢阅读"><a href="#文章结束-感谢阅读" class="headerlink" title="文章结束,感谢阅读"></a>文章结束,感谢阅读<img src="https://i.loli.net/2019/08/20/hNPquakn3wQmfDj.jpg" alt="爱你"></h6>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
